# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, grid
# This file is distributed under the same license as the ReNom package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ReNom 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-20 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rsts/onnx/main.rst:2
msgid "ONNX Support"
msgstr ""

#: ../../rsts/onnx/main.rst:4
msgid ""
"ReNom2.7 supports export a neural network as onnx format. The exported "
"onnx file can be loaded from various onnx supporting frame works."
msgstr "ReNom2.7は, ONNX形式によるニューラルネットワークモデル出力をサポートします."
"出力されたONNXファイルは, ONNXをサポートするDeepLearningフレームワークから読み込むことが可能です."

#: ../../rsts/onnx/main.rst:8
msgid "renom.utility.onnx"
msgstr ""

#: of renom.utility.onnx.export_onnx:1
msgid "This function exports an onnx file"
msgstr "与えられたニューラルネットワークモデルをONNX形式で出力する."

#: of renom.utility.onnx.export_onnx
msgid "Parameters"
msgstr ""

#: of renom.utility.onnx.export_onnx:3
msgid "The name of computational graph."
msgstr "出力する計算グラフ(ニューラルネットワークモデル)の名前."

#: of renom.utility.onnx.export_onnx:5
msgid "Neural Network Model"
msgstr "ニューラルネットワークモデル."

#: of renom.utility.onnx.export_onnx:7
msgid "Dummy input for building a computational graph."
msgstr "計算グラフを構築するために必要な, 擬似入力."

#: of renom.utility.onnx.export_onnx:9
msgid "The onnx file path to which the model will be export."
msgstr "ONNXファイルを出力するファイルパス."

#: of renom.utility.onnx.export_onnx:11
msgid "If True is given, this function print the str(model)."
msgstr "Trueが与えられた場合, この関数はstr(model)をプリントする."

#: ../../rsts/onnx/main.rst:16
msgid "How to export a neural network model"
msgstr "ニューラルネットワークモデルをONNX形式で出力する"

#: ../../rsts/onnx/main.rst:47
msgid "Onnx supported functions."
msgstr "ONNX形式での出力がサポートされている関数"

#: ../../rsts/onnx/main.rst:49
msgid "Following ReNom functions can be converted to onnx format."
msgstr "ReNom内に定義されている以下の関数は, ONNX形式での出力に対応しております."

#: ../../rsts/onnx/main.rst:52
msgid "Operations"
msgstr ""

#: ../../rsts/onnx/main.rst:54
msgid "__neg__"
msgstr ""

#: ../../rsts/onnx/main.rst:55
msgid "__add__"
msgstr ""

#: ../../rsts/onnx/main.rst:56
msgid "__abs__"
msgstr ""

#: ../../rsts/onnx/main.rst:57
msgid "__sub__"
msgstr ""

#: ../../rsts/onnx/main.rst:58
msgid "__mul__"
msgstr ""

#: ../../rsts/onnx/main.rst:59
msgid "__div__"
msgstr ""

#: ../../rsts/onnx/main.rst:63
msgid "Activation functions"
msgstr "活性化関数"

#: ../../rsts/onnx/main.rst:66
msgid "Relu(:py:meth:`renom.layers.activation.relu.Relu`)"
msgstr ""

#: ../../rsts/onnx/main.rst:70
msgid "Layers"
msgstr "ニューラルネットワークレイヤ"

#: ../../rsts/onnx/main.rst:72
msgid "Dense(:py:meth:`renom.layers.function.dense.Dense`)"
msgstr ""

#: ../../rsts/onnx/main.rst:73
msgid "Conv2d(:py:meth:`renom.layers.function.conv2d.Conv2d`)"
msgstr ""

#: ../../rsts/onnx/main.rst:74
msgid "MaxPool2d(:py:meth:`renom.layers.function.pool2d.MaxPool2d`)"
msgstr ""

#: ../../rsts/onnx/main.rst:75
msgid "Dropout(:py:meth:`renom.layers.function.dropout.Dropout`)"
msgstr ""

#: ../../rsts/onnx/main.rst:79
msgid "Others"
msgstr "その他"

#: ../../rsts/onnx/main.rst:81
msgid "reshape(:py:meth:`renom.core.Node`)"
msgstr ""

#: ../../rsts/onnx/main.rst:82
msgid "flatten(:py:meth:`renom.layers.function.flatten.Flatten`)"
msgstr ""

