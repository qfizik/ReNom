# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, grid
# This file is distributed under the same license as the ReNom package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ReNom 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-20 17:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rsts/api/renom.rst:2
msgid "renom"
msgstr ""

#: of renom.core.Grads:1
msgid "Bases: :class:`object`"
msgstr ""

#: of renom.core.Grads:1
msgid "Grads class. This class contains gradients of each Node object."
msgstr "Gradsクラス. このクラスは, 各Nodeオブジェクトの勾配を保持する."

#: of renom.core.Grads:3
msgid ""
"When the function ``grad`` which is a method of Node class is called, an "
"instance of Grads class will be returned."
msgstr "Nodeクラスのオブジェクトが持つ ``grad`` メソッドが実行されると, Gradsクラスのオブジェクトが返される."

#: of renom.core.Grads:6
msgid ""
"For getting the gradient with respect to any Variable object 'x' which is"
" on a computational graph, call the 'get' function of Grads object."
msgstr "計算グラフ上の変数'x'に関する勾配を取得したい場合, Gradsオブジェクトの'get'メソッドを使用することができる."

#: of renom.core.Grads:10 renom.core.Grads.update:14 renom.core.Node:5
#: renom.core.Node.reshape:10 renom.core.Node.to_gpu:5
#: renom.core.Node.transpose:10 renom.core.Variable:42 renom.operation.Amax:11
#: renom.operation.Amin:11 renom.operation.amax:12 renom.operation.amin:12
#: renom.operation.concat:12 renom.operation.dot:12 renom.operation.mean:16
#: renom.operation.reshape:12 renom.operation.sqrt:10 renom.operation.sum:16
#: renom.operation.where:14
msgid "Example"
msgstr ""

#: of renom.core.Grads.get:1
msgid ""
"This function returns the gradient with respect to the given node. In the"
" case of that there isn't the gradient of given node, this function "
"returns 'None'."
msgstr "この関数は, 与えられた変数に関する勾配を返す.与えられた変数に関する勾配が存在しない場合, 'None'を返す."

#: of renom.core.Grads.get renom.core.Grads.update renom.core.Node.grad
#: renom.core.Node.reshape renom.core.Node.transpose renom.core.Variable
#: renom.operation.Amax renom.operation.Amin renom.operation.amax
#: renom.operation.amin renom.operation.concat renom.operation.dot
#: renom.operation.exp renom.operation.log renom.operation.mean
#: renom.operation.reshape renom.operation.sqrt renom.operation.square
#: renom.operation.sum renom.operation.where
msgid "Parameters"
msgstr ""

#: of renom.core.Grads.get:5
msgid "Returns a gradient with respect to this argument."
msgstr "引数に与えられた変数に関する勾配を返す."

#: of renom.core.Grads.get:7
msgid ""
"If gradient of given node is not found, object given to this argument "
"will be returned."
msgstr "与えられた変数に関する勾配が存在しなかった場合, この引数に与えられたオブジェクトを返す."

#: of renom.core.Grads.get renom.core.Node.copy renom.core.Node.reshape
#: renom.core.Node.transpose renom.operation.concat renom.operation.dot
#: renom.operation.exp renom.operation.log renom.operation.mean
#: renom.operation.reshape renom.operation.sqrt renom.operation.square
#: renom.operation.sum renom.operation.where
msgid "Returns"
msgstr ""

#: of renom.core.Grads.get:11
msgid "Gradient of given node object or object given to argument default."
msgstr "引数(node)に与えられた変数の勾配, もしくは引数(default)を返す."

#: of renom.core.Grads.get renom.core.Node.copy renom.core.Node.reshape
#: renom.core.Node.transpose renom.operation.concat renom.operation.dot
#: renom.operation.exp renom.operation.log renom.operation.mean
#: renom.operation.reshape renom.operation.sqrt renom.operation.square
#: renom.operation.sum renom.operation.where
msgid "Return type"
msgstr ""

#: of renom.core.Grads.update:1
msgid ""
"This function updates variable objects on the computational graph using "
"obtained gradients."
msgstr "計算された勾配を用いて, 計算グラフ上の対応する変数を更新する."

#: of renom.core.Grads.update:4
msgid ""
"If an optimizer instance is given, gradients are rescaled with regard to "
"the optimization algorithm before updating."
msgstr "Optimizerインスタンスが与えられた場合, 勾配はOptimizerインスタンスによって処理された後, 勾配に対応する変数の更新に使用される."

#: of renom.core.Grads.update:7
msgid "Algorithm for rescaling gradients."
msgstr "Optimizerオブジェクト"

#: of renom.core.Grads.update:9
msgid ""
"List of models to update variables. When specified, variables which does "
"not belong to one of the models are not updated."
msgstr "勾配による更新対象の変数のリストを与えることができる.もしひとつ以上の変数が与えられた場合, リストに存在する変数のみが更新される."

#: of renom.core.Node:1
msgid "Bases: :class:`numpy.ndarray`"
msgstr ""

#: of renom.core.Node:1
msgid ""
"This is the base class of all operation function. Node class inherits "
"numpy ndarray class."
msgstr "基底クラス. Numpyのndarrayクラスを継承している."

#: of renom.core.Node.to_cpu:1
msgid "Send the data from GPU device to CPU."
msgstr "GPUデバイス上のデータをCPUへ転送する."

#: of renom.core.Node.to_gpu:1
msgid ""
"Send the data on CPU to GPU device. This method only available if cuda is"
" activated otherwise this raises `ValueError`."
msgstr ""
"CPU上のデータをGPUデバイスへ転送する.この関数は, Cudaモジュールが使用可能なときのみ有効となる.それ以外の場合, "
"`ValueError` を投げる."

#: of renom.core.Node.copy:1
msgid ""
"Returns a copy of itself. If node object does not have data on gpu, this "
"returns ndarray."
msgstr "オブジェクトのコピーを返す. "

#: of renom.core.Node.copy:5
msgid "Copy of node object."
msgstr "Nodeオブジェクトのコピー"

#: of renom.core.Node.as_ndarray:1
msgid "This method returns itself as ndarray object."
msgstr "Nodeオブジェクトをndarrayへ変換して返す."

#: of renom.core.Node.release_gpu:1
msgid "This method releases array data on GPU."
msgstr "GPUデバイス上に確保された行列データを解放する."

#: of renom.core.Node.detach_graph:1
msgid "This method destroys computational graph."
msgstr "計算グラフを削除する."

#: of renom.core.Node.reshape:1
msgid "Returns reshaped array."
msgstr "Reshapeされた行列を返す."

#: of renom.core.Node.reshape:3
msgid "Array will be reshaped according to given shape."
msgstr "行列を引数に与えられた形に, 変形する."

#: of renom.core.Node.reshape:6 renom.operation.reshape:8
msgid "Reshaped array."
msgstr "変形された行列"

#: of renom.core.Node.grad:1
msgid ""
"This method follows computational graph and returns the gradients of "
"Variable object."
msgstr "計算グラフを遡り, 各変数の勾配を計算する."

#: of renom.core.Node.grad:4
msgid "Initial value of following the graph."
msgstr "計算グラフを遡る際の初期値."

#: of renom.core.Node.grad:6
msgid "If it's True, the computational graph will be destroyed."
msgstr "Trueが与えられた場合, 計算グラフは `grad`メソッドが呼ばれるたびに消去される."

#: of renom.core.Node.grad:8
msgid ""
"Sets the default weight decay of the model. See the Variable class for "
"more info."
msgstr "係数が与えられた場合, 計算グラフ上のすべての変数に対して重み減衰項を追加した場合の勾配を計算する."

#: of renom.core.Node.transpose:1
msgid "Returns an array with axes transposed."
msgstr "与えられた引数に基づき, 行列の転置を行う."

#: of renom.core.Node.transpose:3
msgid "Permute the axes according to the values given."
msgstr "えられた番号に従って, 軸を入れ替える."

#: of renom.core.Node.transpose:6
msgid "Transposed array."
msgstr "転置後の行列"

#: of renom.core.Variable:1
msgid "Bases: :class:`renom.core.basic_node.Node`"
msgstr ""

#: of renom.core.Variable:1
msgid "Variable class."
msgstr ""

#: of renom.core.Variable:3
msgid ""
"The gradient of this object will be calculated. Variable object is "
"created from ndarray object or Number object."
msgstr "Variableクラスとして定義された変数について, 勾配計算が実行される."

#: of renom.core.Variable:6 renom.operation.dot:3 renom.operation.dot:5
#: renom.operation.exp:3 renom.operation.log:3 renom.operation.mean:5
#: renom.operation.reshape:3 renom.operation.sqrt:3 renom.operation.square:3
#: renom.operation.sum:5 renom.operation.where:5 renom.operation.where:7
msgid "Input array."
msgstr "行列"

#: of renom.core.Variable:8
msgid "Auto update flag."
msgstr "Trueが与えられた場合, Gradsオブジェクトのupdateメソッドによって対応する勾配による値の更新が行われる."

#: of renom.core.Variable:10
msgid "Weight decay rate"
msgstr "重み減衰係数"

#: of renom.core.Variable:13
msgid ""
"Weight decay allows the user to choose if weight decay is to be used in "
"any of their variables. If weight decay is not defined in the Variable "
"(I.e. defaults to None), then no weight decay is performed."
msgstr "引数 `weight_decay` にNoneが与えられた場合, この行列に対して重み減衰は適用されない."

#: of renom.core.Variable:18
msgid ""
"For convenience, one can define a variable with a weight decay of 0 and "
"provide the weight decay argument when building the gradients to default "
"all weights to the same λ for weight decay."
msgstr ""
"Gradsオブジェクトのupdateメソッドにおいても, 重み減衰を追加できる引数オプションが存在するが, "
"Variableオブジェクトのweight_decayに与えられた減衰係数が優先される."

#: of renom.core.Variable:22
msgid ""
"Individually assigned weight decay takes precedence over this default "
"value, allowing users to customize the weight decay in the network."
msgstr ""
"Variableの引数weight_decayに対し, 0が与えられた時のみ, "
"Gradsオブジェクトのupdateメソッドの引数weight_decayが有効になる."

#: of renom.core.Variable:25
msgid "In summary, weight decay updates according to the following table."
msgstr "以下の表のような優先順で重み減衰が適用される."

#: of renom.core.Variable:28
msgid "Variable"
msgstr ""

#: of renom.core.Variable:28
msgid "Grad"
msgstr ""

#: of renom.core.Variable:28
msgid "Result"
msgstr ""

#: of renom.core.Variable:30
msgid "None"
msgstr ""

#: of renom.core.Variable:30 renom.core.Variable:32
msgid "<Any>"
msgstr ""

#: of renom.core.Variable:30 renom.core.Variable:34
msgid "No Update"
msgstr "重み減衰無し"

#: of renom.core.Variable:32 renom.core.Variable:36
msgid "0.3"
msgstr ""

#: of renom.core.Variable:34 renom.core.Variable:36
msgid "0"
msgstr ""

#: of renom.core.Variable:34
msgid "None/0"
msgstr ""

#: of renom.operation.Amax:1
msgid "This function performs max calculation."
msgstr "行列の指定された軸方向に対し, 最大値を取得する."

#: of renom.operation.Amax:3 renom.operation.Amin:3 renom.operation.amax:4
#: renom.operation.amin:4
msgid "Input matrix."
msgstr "行列"

#: of renom.operation.Amax:5 renom.operation.Amin:5 renom.operation.amax:6
#: renom.operation.amin:6
msgid "Perform calculation along this argument."
msgstr "演算を適用する行列軸"

#: of renom.operation.Amax:7
msgid "If `True` is passed, reduced dimensions remain."
msgstr "Trueが与えられた場合, 演算実行後の軸を削除しない."

#: of renom.operation.Amin:1
msgid "This function performs min calculation."
msgstr "行列の指定された軸方向に対し, 最小値を取得する."

#: of renom.operation.Amin:7
msgid "If `Ture` is passed, reduced dimensions remain."
msgstr "Trueが与えられた場合, 演算実行後の軸を削除しない."

#: of renom.operation.reshape:1
msgid "This function reshapes array."
msgstr "行列の形を変形する."

#: of renom.operation.reshape:5
msgid "Shape."
msgstr "変形後の行列の形"

#: of renom.operation.sum:1
msgid ""
"This function sums up matrix elements. If the argument 'axis' is passed, "
"this function performs sum along specified axis."
msgstr "行列の要素を足し合わせる."
"引数axisが与えられた場合, その軸に沿って要素を足し合わせる."

#: of renom.operation.sum:7
msgid "Summing up along this axis."
msgstr "軸"

#: of renom.operation.mean:9 renom.operation.sum:9
msgid "If this is True, dimension will not be reduced."
msgstr "Trueが与えられた場合, 演算実行後の軸を削除しない."

#: of renom.operation.sum:12
msgid "Summed array."
msgstr "足し合わせた結果"

#: of renom.operation.dot:1
msgid "This function executes dot product of the two matrixes."
msgstr "行列積を実行する."

#: of renom.operation.dot:8
msgid "Multiplied array."
msgstr "行列積の結果"

#: of renom.operation.concat:1
msgid "Join a sequence of arrays along specified axis."
msgstr "二つ以上の行列を, 与えられた軸に沿って結合する."

#: of renom.operation.concat:3
msgid "Input arrays or tuple of input arrays."
msgstr "行列"

#: of renom.operation.concat:5
msgid "Concatenation will be performed along this axis. Default value is 1."
msgstr "結合を実行する軸"

#: of renom.operation.concat:8
msgid "Concatenated array."
msgstr "行列が結合された結果"

#: of renom.operation.where:1
msgid "Return elements, either from a or b, depending on condition."
msgstr "引数conditionに与えられた条件に従い, 引数に与えられた行列aもしくはbの"
"要素を返す."

#: of renom.operation.where:3
msgid "Condition array."
msgstr "要素の選択条件"

#: of renom.operation.where:10
msgid "Conditioned array."
msgstr "条件によって選択された要素を持つ行列"

#: of renom.operation.sqrt:1
msgid "Square root operation."
msgstr "与えられた行列の各要素に対する平方根を計算する."

#: of renom.operation.sqrt:6
msgid "Square root of input array."
msgstr "平方根計算の結果"

#: of renom.operation.square:1
msgid "Square operation."
msgstr "与えられた行列の各要素に対する二乗を計算する."

#: of renom.operation.square:6
msgid "Squared array."
msgstr "二乗計算の結果"

#: of renom.operation.log:1
msgid "Log operation."
msgstr "与えられた行列の各要素の対数を計算する."

#: of renom.operation.log:6
msgid "Logarithm of input array."
msgstr "対数計算の結果"

#: of renom.operation.exp:1
msgid "Exponential operation."
msgstr "ネイピア定数の指数乗を計算する."

#: of renom.operation.exp:6
msgid "Exponential of input array."
msgstr "与えられた行列の要素によるネイピア数の指数乗を計算する."

#: of renom.operation.amin:1
msgid ""
"Returns min value or array of given array. You can specify the axis which"
" the operation will be performed for."
msgstr "行列の指定された軸方向に対し, 最小値を取得する."

#: of renom.operation.amax:8 renom.operation.amin:8
msgid "If `Ture` is passed, dimensions will not be reduced."
msgstr "Trueが与えられた場合, 演算実行後の軸を削除しない."

#: of renom.operation.amax:1
msgid ""
"Returns max value or array of given array. You can specify the axis which"
" the operation will be performed for."
msgstr "行列の指定された軸方向に対し, 最大値を取得する."


#: of renom.operation.mean:1
msgid ""
"This function calculates the mean of matrix elements. If the argument "
"'axis' is passed, this function performs mean calculation along the "
"specified axis."
msgstr "行列の指定された軸方向に対し, 平均値を取得する."

#: of renom.operation.mean:7
msgid "Calculate the mean along this axis"
msgstr "指定された軸に沿って, 計算を実行する."

#: of renom.operation.mean:12
msgid "Mean array."
msgstr "平均値"

